/**
 * I2C library
 * author: Guillaume Patrigeon -- autogenerated
 * update: 08-01-2019
 */

#ifndef __I2C_H__
#define	__I2C_H__


//--------------------------------------------------------
#if defined(I2C1) && defined(_USE_I2C1)

/// Initialize I2C1 module
void I2C1_Init(unsigned int baudrate);

/// Enable I2C1 module
#define I2C1_Enable()           I2C1.PE = 1

/// Disable I2C1 module
#define I2C1_Disable()          I2C1.PE = 0

/// Write data throught I2C1 module - Return 0 on success
int I2C1_Write(unsigned char address, int size, unsigned char* data);

/// Read data throught I2C1 module - Return 0 on success
int I2C1_Read(unsigned char address, int size, unsigned char* data);

#endif



//--------------------------------------------------------
#if defined(I2C2) && defined(_USE_I2C2)

/// Initialize I2C2 module
void I2C2_Init(unsigned int baudrate);

/// Enable I2C2 module
#define I2C2_Enable()           I2C2.PE = 1

/// Disable I2C2 module
#define I2C2_Disable()          I2C2.PE = 0

/// Write data throught I2C2 module - Return 0 on success
int I2C1_Write(unsigned char address, int size, unsigned char* data);

/// Read data throught I2C2 module - Return 0 on success
int I2C1_Read(unsigned char address, int size, unsigned char* data);

#endif



//--------------------------------------------------------
#if defined(I2C3) && defined(_USE_I2C3)

/// Initialize I2C3 module
void I2C3_Init(unsigned int baudrate);

/// Enable I2C3 module
#define I2C3_Enable()           I2C3.PE = 1

/// Disable I2C3 module
#define I2C3_Disable()          I2C3.PE = 0

/// Write data throught I2C3 module - Return 0 on success
int I2C1_Write(unsigned char address, int size, unsigned char* data);

/// Read data throught I2C3 module - Return 0 on success
int I2C1_Read(unsigned char address, int size, unsigned char* data);

#endif



//--------------------------------------------------------
#if defined(I2C4) && defined(_USE_I2C4)

/// Initialize I2C4 module
void I2C4_Init(unsigned int baudrate);

/// Enable I2C4 module
#define I2C4_Enable()           I2C4.PE = 1

/// Disable I2C4 module
#define I2C4_Disable()          I2C4.PE = 0

/// Write data throught I2C4 module - Return 0 on success
int I2C1_Write(unsigned char address, int size, unsigned char* data);

/// Read data throught I2C4 module - Return 0 on success
int I2C1_Read(unsigned char address, int size, unsigned char* data);

#endif



#endif
